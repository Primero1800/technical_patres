"""create all tables

Revision ID: cde0383068e4
Revises:
Create Date: 2025-06-04 12:26:10.851849

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cde0383068e4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pat_book",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("author", sa.String(), nullable=False),
        sa.Column("published_at", sa.Integer(), nullable=True),
        sa.Column("isbn", sa.String(), nullable=True),
        sa.Column(
            "quantity", sa.Integer(), server_default="1", nullable=False
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.CheckConstraint(
            "published_at >= 1000",
            name=op.f("ck_pat_book_check_published_at_min_value"),
        ),
        sa.CheckConstraint(
            "quantity >= 0", name=op.f("ck_pat_book_check_quantity_min_value")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_pat_book")),
        sa.UniqueConstraint("isbn", name=op.f("uq_pat_book_isbn")),
    )
    op.create_table(
        "pat_reader",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_pat_reader")),
        sa.UniqueConstraint("email", name=op.f("uq_pat_reader_email")),
    )
    op.create_table(
        "pat_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_pat_user")),
    )
    op.create_index(
        op.f("ix_pat_user_email"), "pat_user", ["email"], unique=True
    )
    op.create_table(
        "pat_borrowed_book",
        sa.Column("book_id", sa.Integer(), nullable=False),
        sa.Column("reader_id", sa.Integer(), nullable=False),
        sa.Column(
            "borrow_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("return_date", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["pat_book.id"],
            name=op.f("fk_pat_borrowed_book_book_id_pat_book"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["reader_id"],
            ["pat_reader.id"],
            name=op.f("fk_pat_borrowed_book_reader_id_pat_reader"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_pat_borrowed_book")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("pat_borrowed_book")
    op.drop_index(op.f("ix_pat_user_email"), table_name="pat_user")
    op.drop_table("pat_user")
    op.drop_table("pat_reader")
    op.drop_table("pat_book")
    # ### end Alembic commands ###
